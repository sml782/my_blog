{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/alipay.png","path":"img/alipay.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/indigo/.editorconfig","hash":"9b0445427777519defe360ea38c61729d847b3d3","modified":1529993893000},{"_id":"themes/indigo/LICENSE","hash":"24944bf7920108f5a4790e6071c32e9102760c37","modified":1529993893000},{"_id":"themes/indigo/README.md","hash":"4bf26d9b43bf24b8e0a1a0d058437a347972f5e6","modified":1529993893000},{"_id":"themes/indigo/_config.yml","hash":"dbf22c13611f494b22bfa1c29a866ac6c25ecfa0","modified":1530454309920},{"_id":"themes/indigo/package.json","hash":"0ef01e26a514d612fd7fb98b0bab05f9c92b7547","modified":1529994637000},{"_id":"source/_posts/hello-world.md","hash":"da9fae7eac06a4fc4818b913c57a3b778ae47157","modified":1530003671000},{"_id":"source/_posts/laozhu.md","hash":"7d2c3209bfb9c82be6c327f91b891fcb84a2e575","modified":1530431784165},{"_id":"source/_posts/test-word.md","hash":"46b517a4d9cec1baae2da4071b762d0683f1ba49","modified":1530431081892},{"_id":"source/categories/index.md","hash":"9bdf77b9fba386cf142cc799120cad41a8048eff","modified":1530069403000},{"_id":"source/tags/index.md","hash":"88a3afd16c1a4ebf599f29da4161381b29e402e9","modified":1530069413000},{"_id":"themes/indigo/.git/HEAD","hash":"da237e0de55301608e7c572e119ab5c4e43c0e85","modified":1529993893000},{"_id":"themes/indigo/.git/config","hash":"ad7f294e99db5c98f19132b2670141fe40d333c8","modified":1529993869000},{"_id":"themes/indigo/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1529993526000},{"_id":"themes/indigo/.git/index","hash":"12f6c70c0a41353ceca0e50c9f5e24e7f451e2d1","modified":1529995857000},{"_id":"themes/indigo/.git/packed-refs","hash":"8d23deb22f1c0a29dd88b28c901be181fe9862dc","modified":1529993534000},{"_id":"themes/indigo/languages/en.yml","hash":"1957d2bfc3a4cef299f4f169b431e9b1128ba162","modified":1529993893000},{"_id":"themes/indigo/languages/ja.yml","hash":"74fd480874bf5e773ba7f9d2a94697cda979091f","modified":1529993893000},{"_id":"themes/indigo/languages/nl-NL","hash":"9085c04491f93066f2369911cc2175b59ae596ad","modified":1529993893000},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"7dc6ae434dde390b6768d244132e23cc78c33817","modified":1529993893000},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"6a9e820be66eb12ae746f2527e0dc1adf927c685","modified":1529993893000},{"_id":"themes/indigo/layout/archive.ejs","hash":"d039719e21f6a6fa2925b00aaa623a180a78c818","modified":1529993893000},{"_id":"themes/indigo/layout/categories.ejs","hash":"41783d2069d5080566a99e6312aa2113105f8b41","modified":1529993893000},{"_id":"themes/indigo/layout/category.ejs","hash":"7ea26a8a935886963eda82f41c7bd5270cf780d9","modified":1529993893000},{"_id":"themes/indigo/layout/index.ejs","hash":"39477807b98b2d2df78f3b82498a11e90be8222c","modified":1529993893000},{"_id":"themes/indigo/layout/layout.ejs","hash":"d52f43fa9572d70cae834e4887c8897b43744805","modified":1529993893000},{"_id":"themes/indigo/layout/page.ejs","hash":"afb98face24d39a21ebbbde6592a9afc98572aa4","modified":1529993893000},{"_id":"themes/indigo/layout/post.ejs","hash":"afbf8532dc8d148ca4dff2ca127a3382907cf2f5","modified":1529993893000},{"_id":"themes/indigo/layout/tag.ejs","hash":"36786a3de7f6cad58209603f7d84ba23addea174","modified":1529993893000},{"_id":"themes/indigo/layout/tags.ejs","hash":"20466446c41409d14a3d42ccaec24a65a045efef","modified":1529993893000},{"_id":"themes/indigo/scripts/plugins.js","hash":"e439d717513616bedeed37ba9b05117470809b21","modified":1529993893000},{"_id":"themes/indigo/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1529993526000},{"_id":"themes/indigo/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1529993526000},{"_id":"themes/indigo/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1529993526000},{"_id":"themes/indigo/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1529993526000},{"_id":"themes/indigo/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1529993526000},{"_id":"themes/indigo/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1529993526000},{"_id":"themes/indigo/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1529993526000},{"_id":"themes/indigo/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1529993526000},{"_id":"themes/indigo/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1529993526000},{"_id":"themes/indigo/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1529993526000},{"_id":"themes/indigo/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1529993526000},{"_id":"themes/indigo/.git/logs/HEAD","hash":"da488aa8f953e9da474baaf0ae4a437708931dbd","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"55cd81ef9183426d6d99fd91550fce0a9cc92aa0","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"9ac30b9439fab69973cf4722dbf2945a18fd3804","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"e1a71a30a1c7a664ddf3ba3e7eb3a5b90bc4b33c","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"02a95a88774cc50dbcc32242b6c8ac7e9d9028bb","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"6156bf20791e46fc1c5872113276c1c1f5c13773","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"ec7b3ec79bbbead9c7e43e2e6c6b5c8bef509410","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"bc4cb19b20de55a0332647f4dca9684184383685","modified":1529993534000},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"d39afaad6b0dd2a3ae27e6db3e9a6cd6014622fa","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"dc27242927890f130a64400596b9b7ad5fca8972","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"a87d9b0485b3bf4cdfdad890e5974c43dbaa8240","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"439d6315a1b16e32b77a68c3f0cb2961d581086a","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"c2091c621b5480ef1e69d72027028cec8e929892","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"19eff4876d31080a427644f7a43fe172d0c008c6","modified":1529993893000},{"_id":"themes/indigo/source/css/style.less","hash":"f22d4146e0bdb4485d33f20080c67ba05724afea","modified":1529993893000},{"_id":"themes/indigo/source/img/alipay.jpg","hash":"6054d9ed2ca7cd1f645b729e05632134467d4daa","modified":1529993534000},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"62a4893b1a32e997dcdb6e467b10559df75221e2","modified":1529993893000},{"_id":"themes/indigo/source/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1529993534000},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1529993534000},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1529993534000},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1529993534000},{"_id":"themes/indigo/source/img/wechat.jpg","hash":"c13e977e1cd72ccd3d15e1e65339ae32ef074b88","modified":1530427806162},{"_id":"themes/indigo/source/js/main.js","hash":"300b2e963683ced162e28afcd24ffc970fc23ac2","modified":1529993893000},{"_id":"themes/indigo/source/js/main.min.js","hash":"8acf4480f8ab859423b8926b9b790c67b5a77276","modified":1529993893000},{"_id":"themes/indigo/source/js/search.js","hash":"a1de7e7a2ef8330ebcd9f3a7a4622b3bac44e4f3","modified":1529993893000},{"_id":"themes/indigo/source/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1529993893000},{"_id":"themes/indigo/.git/objects/pack/pack-6cd489afe735b98d38fe69acb5d3079d71886cd7.idx","hash":"2933bcdc38eec26d2a3c9f8d9a008f4daa4a4be4","modified":1529993534000},{"_id":"themes/indigo/.git/refs/heads/card","hash":"484dfa35ff9eb7a589991d8ca81ef961cd2a4ea6","modified":1529993534000},{"_id":"themes/indigo/.git/refs/heads/master","hash":"a84af794bb0b8c69d6c32c87c06cd270f88874fb","modified":1529993869000},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c7476165721a3a5e34d00d8c5c07e1e5474cd800","modified":1529993534000},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"bcc3bd7a9023d71778f15e98c88552335ae69a69","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"5305ed30ee35cf50f87656737d0ffe85f5bfc16b","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"ea85b46e12d3b9c3612eef7aa76289a663fbc096","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"b0c680ce5b8aaf461a6731b1ff1287bd140c168a","modified":1529993534000},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"41c242fe3159dc68cec8dd00ab6d2663f5a51179","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"11e7d504f7c7a3c4c052da13cfa8ea4862c9383e","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"23719e09689b3afbb19214c6603eb02f896cb9ba","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"93482ad7d1e01b966f5ee1c5d12b88564e02b349","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"8df0d7bf6f8e106cdbdac2dd10a97367aa0695f8","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"062d56cb88ae2be3a6616b911d4ebeffcbfe3cff","modified":1529993534000},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"b3dc38652c4a018a37418136478dcd522fc49f79","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"ad287a70724eb7cd8cd2a03a45b68032ee99973d","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"5caa71745aa340ce57938a930f3b898ee7518d74","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"e44d526029f122e9c2c74f3a647c35002c818cbe","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"4a0c01e4195f685f9825fcd016d01249dbdd52ca","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"23c101d45911eb0846533aaa2d409c43aa5e899a","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"5723d507eca4390e8e5d18c0770e7953b8c22f5a","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"a947f4076b54b48d4df5baf2d5b3c39b632c7576","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/hyper-comments.ejs","hash":"e5a83acc7c2e385b0c9abf428e86e8fdfd3a5202","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"ea603a057196de53bd6afab1fddb93d11f27eb81","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"2decb77bf3c1a064ea6ce1d4e78892c434d9c884","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"8fbd0910828f1ab6eba728bdecc9811d623baae2","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"97b48fe10be1c71d4ff25ccec3bd92d97466c9c5","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"e370bd04ea5cf1c83e0c20516aff7ba3ca8b2d0b","modified":1529993893000},{"_id":"themes/indigo/layout/_partial/plugins/valine.ejs","hash":"a976ca36bd09aeb2902bf94fcc7a59975ea25148","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"7d2a6886265386c640e94ffca3f042675f701a35","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"d476cd3537bcd8a02d055cc223f5c805b8638cc2","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"b7db31b9bc563c10b9e3cf3e6d9cfddfeb3e805a","modified":1529993534000},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"90f0948a9182c14b1dac1e9dbed3c883543266f9","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"58492b7cdb45fe09b026b2f34e8ae69c2ddb8228","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"4390ed22abad59c8b28ed1a479a52f15b5f9cf4a","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"9b961eb1d70e7658f42cf2ca895fa5e35a6b6541","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"f9d06a1e24fb4857fd18d7a0bfbb3a0ab2d1c742","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"e92ccb53e6ac73a51498c6a9672db9d0d2bc7f1a","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"1c041bf91106808e5480c60d9ece45431bb503b3","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"4857f90bb57fc22ca3f942d8934d86d5e9e82c1e","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"2e0469ed8161d5672d903ca1a8027cd65fe007f1","modified":1529993534000},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"1d6641ae7568a0153d24beba9fd9704d2b155f6c","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"27d80bcc96a53dd1e7eaa9a7d746e4b212357302","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"959f4373fda6e45f6a4041a995ed3ea8a05a5170","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"082896b966ed25b39c74e7b007b4f54c235685a4","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"77bfd0b373b0469eb0176167fb076ccda4edf2a7","modified":1529993893000},{"_id":"themes/indigo/source/css/_plugin/valine.less","hash":"ddbb7647d83f732f9b0d5d817d40a748006949cc","modified":1529993893000},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"ca30b732d2efbb0cd55a272ecdabc97f895aee78","modified":1529993893000},{"_id":"themes/indigo/.git/logs/refs/heads/master","hash":"7211fa51e52d101b88dd1acb174852e9eb642b27","modified":1529993869000},{"_id":"themes/indigo/.git/logs/refs/heads/card","hash":"86d05ba8e89f87b102045f30c1bc0b13bc11ee88","modified":1529993534000},{"_id":"themes/indigo/.git/refs/remotes/origin/HEAD","hash":"7f141be72288af81f8e55d94df5da3f87101e8f1","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1529993893000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1529993893000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1529993534000},{"_id":"themes/indigo/.git/logs/refs/remotes/origin/HEAD","hash":"86d05ba8e89f87b102045f30c1bc0b13bc11ee88","modified":1529993534000},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1529993893000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1529993893000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1529993893000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1529993893000},{"_id":"themes/indigo/.git/objects/pack/pack-6cd489afe735b98d38fe69acb5d3079d71886cd7.pack","hash":"4bc1a149fe83923cf0ec31558499df08d7270e31","modified":1529993534000},{"_id":"public/atom.xml","hash":"79b2d72e7853834d7f2e52a96ff4e8d2fa56d1ea","modified":1530541397042},{"_id":"public/content.json","hash":"e8e90b7183bbddc854b6c339f2a2f627f792cec3","modified":1530541397179},{"_id":"public/categories/index.html","hash":"97d7a73090da2dfaf99e56f669f0ce8ea02c8b7f","modified":1530541397187},{"_id":"public/tags/index.html","hash":"de803623aa1277f8555fab41adbd44550a6dbe55","modified":1530541397187},{"_id":"public/archives/index.html","hash":"e2f219755f5b8d32d5956b365e2faede1c9f7a79","modified":1530541397187},{"_id":"public/archives/2018/index.html","hash":"0d53e87b8cf8bbf00f154b35c6d938f160679fcf","modified":1530541397187},{"_id":"public/archives/2018/06/index.html","hash":"574d76d6a3f65c1e03d62c27a9bb07d81e7d4208","modified":1530075832669},{"_id":"public/index.html","hash":"09027c9de42417afea43d3f3d170e05a041df0b8","modified":1530541397187},{"_id":"public/tags/网站/index.html","hash":"9a251761c9f7a3c6a7e18648b3d3608071faf333","modified":1530075832669},{"_id":"public/tags/前端/index.html","hash":"b32643d6bae2e330ccd75cae286fe0e43d85dbac","modified":1530075832669},{"_id":"public/2018/06/26/test-word/index.html","hash":"24d854e78defc68643177521f6f7d369bd64d5d8","modified":1530075832669},{"_id":"public/tags/test/index.html","hash":"a1bfb12ab58c7ebc3c9e8b8a750f20b882fc8e18","modified":1530075832669},{"_id":"public/2018/06/26/laozhu/index.html","hash":"9313bcf0ad0345ad21503f1ed3633cb9fdc52b18","modified":1530075832669},{"_id":"source/_posts/lll.md","hash":"07f3d29d31e53d64d367d0f4ca7fd8451c619c8d","modified":1530004049000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1530004279000},{"_id":"themes/indigo/source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1530066399000},{"_id":"themes/indigo/source/img/alipay.png","hash":"d696d0b770df6f70bd3adad3ce590afe99c6fb08","modified":1530066236000},{"_id":"themes/indigo/source/img/wechat.JPG","hash":"c13e977e1cd72ccd3d15e1e65339ae32ef074b88","modified":1530066349000},{"_id":"source/_posts/test-PP.md","hash":"e87b7d7d8ccf29e79990ac40d497488021bde4c5","modified":1530431076583},{"_id":"public/tags/Test/index.html","hash":"9fd8c3a6de28ca874fa9e72bd234e07d3801663d","modified":1530075832669},{"_id":"public/categories/测试/index.html","hash":"6b4b30775043962554604c38a290c9933088759a","modified":1530075832671},{"_id":"public/categories/前端/index.html","hash":"f5dc161ca26b96f70df4ce0ca8896256d3a735ab","modified":1530075832671},{"_id":"public/2018/06/27/test-PP/index.html","hash":"b2b758a05288e7c2283d7ae99754cddc59abf112","modified":1530075832671},{"_id":"public/img/alipay.png","hash":"d696d0b770df6f70bd3adad3ce590afe99c6fb08","modified":1530541397214},{"_id":"source/_posts/blog.md","hash":"a1eda81ab0d572fde0d4890385d94858745ba12c","modified":1530431118918},{"_id":"source/_posts/js_closure.md","hash":"bd7647cf5b92d47734b39d5e3759939dc4b5fda0","modified":1530453980990},{"_id":"public/archives/2018/07/index.html","hash":"34b8354fb40c481caa4b17a757c8b6c72f37ed8a","modified":1530541397187},{"_id":"public/tags/First/index.html","hash":"f7de08adfbe8da2b670ad4a84d5c6cefd6200175","modified":1530541397187},{"_id":"public/2018/07/01/blog/index.html","hash":"43a61ac0f303b5ab454d33ccc85f43ca00ca14d4","modified":1530541397187},{"_id":"public/categories/JS/index.html","hash":"7d056fc75c5b628bd4f73bd7c57d0108de273ec1","modified":1530541397187},{"_id":"public/tags/闭包/index.html","hash":"32dd4dcbd5a8d1784d5c61e5b47da1202d5a6533","modified":1530541397187},{"_id":"public/2018/07/01/js_closure/index.html","hash":"75d72f48edfa9a77cdec2fccb7edd71509eacf22","modified":1530541397187},{"_id":"public/img/avatar.jpg","hash":"62a4893b1a32e997dcdb6e467b10559df75221e2","modified":1530541397192},{"_id":"public/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1530541397192},{"_id":"public/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1530541397192},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1530541397192},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1530541397192},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1530541397192},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1530541397192},{"_id":"public/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1530541397192},{"_id":"public/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1530541397193},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1530541397194},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1530541397194},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1530541397213},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1530541397213},{"_id":"public/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1530541397213},{"_id":"public/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1530541397213},{"_id":"public/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1530541397213},{"_id":"public/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1530541397214},{"_id":"public/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1530541397214},{"_id":"public/img/wechat.jpg","hash":"c13e977e1cd72ccd3d15e1e65339ae32ef074b88","modified":1530541397214},{"_id":"public/js/main.min.js","hash":"8acf4480f8ab859423b8926b9b790c67b5a77276","modified":1530541397218},{"_id":"public/js/search.js","hash":"a1de7e7a2ef8330ebcd9f3a7a4622b3bac44e4f3","modified":1530541397218},{"_id":"public/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1530541397218},{"_id":"public/js/main.js","hash":"300b2e963683ced162e28afcd24ffc970fc23ac2","modified":1530541397218},{"_id":"public/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1530541397218},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1530541397218},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1530541397219},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1530541397228},{"_id":"public/css/style.css","hash":"27f88e278b738328b5acd28e88b5cb20daa490e6","modified":1530541397466}],"Category":[{"name":"测试","_id":"cjiwk65kq0000uur4fd3ipphb"},{"name":"前端","_id":"cjiwk6gg40002uur4hkz7nvh6"},{"name":"JS","_id":"cjj2jvthg00045uhgp27wbc62"}],"Data":[],"Page":[{"title":"分类","comments":0,"date":"2018-06-26T06:26:18.000Z","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ncomments: false\ndate: 2018-06-26 14:26:18\nlayout: categories\n---\n","updated":"2018-06-27T03:16:43.000Z","path":"categories/index.html","_id":"cjivgw1y2000b67r48bz2h4n2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","comments":0,"date":"2018-06-26T06:24:55.000Z","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ncomments: false\ndate: 2018-06-26 14:24:55\nlayout: tags\n---\n","updated":"2018-06-27T03:16:53.000Z","path":"tags/index.html","_id":"cjivgw1y3000c67r4rasssnvs","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","date":"2018-06-26T06:54:45.000Z","published":0,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2018-06-26 14:54:45\ntags: [ hello ]\npublished: false\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","updated":"2018-06-26T09:01:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjivgw1xh000067r4av45d7bl","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"老朱","date":"2018-06-26T09:01:52.000Z","published":0,"_content":"# 老朱的屌炸了\n\n* vue\n\n```vue\n<template>\n     <div>\n         <template v-for=\"item in list\">\n              <p>{{item.content}}</p>\n              <img :src=\"item.img\" alt=\"\">\n              <p class=\"divider\"></p>\n         </template>\n     </div>\n</template>\n\n<script>\nexport default {\n     data () {\n         return {\n             list : [\n                 {content : 'ziksang',img :'https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=1301074775,1382810875&fm=80&w=179&h=119&img.JPEG'},\n                 {content : 'ziksang2',img :'https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1312092207,1376369244&fm=80&w=179&h=119&img.JPEG'}\n             ]\n         }\n     }\n}\n</script>\n<style>\nbody,html{\n    width:100%;\n    height:100%\n}\n.divider{\n    width:100%;\n    height:1px;\n    background:black;\n}\n</style>\n```","source":"_posts/laozhu.md","raw":"---\ntitle: 老朱\ndate: 2018-06-26 17:01:52\ntags: [ test ]\npublished: false\n---\n# 老朱的屌炸了\n\n* vue\n\n```vue\n<template>\n     <div>\n         <template v-for=\"item in list\">\n              <p>{{item.content}}</p>\n              <img :src=\"item.img\" alt=\"\">\n              <p class=\"divider\"></p>\n         </template>\n     </div>\n</template>\n\n<script>\nexport default {\n     data () {\n         return {\n             list : [\n                 {content : 'ziksang',img :'https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=1301074775,1382810875&fm=80&w=179&h=119&img.JPEG'},\n                 {content : 'ziksang2',img :'https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1312092207,1376369244&fm=80&w=179&h=119&img.JPEG'}\n             ]\n         }\n     }\n}\n</script>\n<style>\nbody,html{\n    width:100%;\n    height:100%\n}\n.divider{\n    width:100%;\n    height:1px;\n    background:black;\n}\n</style>\n```","slug":"laozhu","updated":"2018-07-01T07:56:24.165Z","_id":"cjivgw1xk000167r4epcrgu1g","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"老朱的屌炸了\"><a href=\"#老朱的屌炸了\" class=\"headerlink\" title=\"老朱的屌炸了\"></a>老朱的屌炸了</h1><ul>\n<li>vue</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">     &lt;div&gt;</span><br><span class=\"line\">         &lt;template v-for=&quot;item in list&quot;&gt;</span><br><span class=\"line\">              &lt;p&gt;&#123;&#123;item.content&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">              &lt;img :src=&quot;item.img&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">              &lt;p class=&quot;divider&quot;&gt;&lt;/p&gt;</span><br><span class=\"line\">         &lt;/template&gt;</span><br><span class=\"line\">     &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">     data () &#123;</span><br><span class=\"line\">         return &#123;</span><br><span class=\"line\">             list : [</span><br><span class=\"line\">                 &#123;content : &apos;ziksang&apos;,img :&apos;https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=1301074775,1382810875&amp;fm=80&amp;w=179&amp;h=119&amp;img.JPEG&apos;&#125;,</span><br><span class=\"line\">                 &#123;content : &apos;ziksang2&apos;,img :&apos;https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1312092207,1376369244&amp;fm=80&amp;w=179&amp;h=119&amp;img.JPEG&apos;&#125;</span><br><span class=\"line\">             ]</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">body,html&#123;</span><br><span class=\"line\">    width:100%;</span><br><span class=\"line\">    height:100%</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.divider&#123;</span><br><span class=\"line\">    width:100%;</span><br><span class=\"line\">    height:1px;</span><br><span class=\"line\">    background:black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"老朱的屌炸了\"><a href=\"#老朱的屌炸了\" class=\"headerlink\" title=\"老朱的屌炸了\"></a>老朱的屌炸了</h1><ul>\n<li>vue</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">     &lt;div&gt;</span><br><span class=\"line\">         &lt;template v-for=&quot;item in list&quot;&gt;</span><br><span class=\"line\">              &lt;p&gt;&#123;&#123;item.content&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">              &lt;img :src=&quot;item.img&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">              &lt;p class=&quot;divider&quot;&gt;&lt;/p&gt;</span><br><span class=\"line\">         &lt;/template&gt;</span><br><span class=\"line\">     &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">     data () &#123;</span><br><span class=\"line\">         return &#123;</span><br><span class=\"line\">             list : [</span><br><span class=\"line\">                 &#123;content : &apos;ziksang&apos;,img :&apos;https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=1301074775,1382810875&amp;fm=80&amp;w=179&amp;h=119&amp;img.JPEG&apos;&#125;,</span><br><span class=\"line\">                 &#123;content : &apos;ziksang2&apos;,img :&apos;https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1312092207,1376369244&amp;fm=80&amp;w=179&amp;h=119&amp;img.JPEG&apos;&#125;</span><br><span class=\"line\">             ]</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">body,html&#123;</span><br><span class=\"line\">    width:100%;</span><br><span class=\"line\">    height:100%</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.divider&#123;</span><br><span class=\"line\">    width:100%;</span><br><span class=\"line\">    height:1px;</span><br><span class=\"line\">    background:black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>"},{"title":"test_word","date":"2018-06-26T06:54:45.000Z","published":0,"_content":"# First One\n## Second Two\n---\n* 这是react\n```jsx\nimport(1);\nclass Aone extends React.Componet {\n    render () {\n        const b = `2`;\n        return (\n            <div>Hello word! {b}</div>\n        )\n    }\n}\nexport default Aone;\n```","source":"_posts/test-word.md","raw":"---\ntitle: test_word\ndate: 2018-06-26 14:54:45\ncategories: [ 前端 ]\ntags: [ 网站, 前端 ]\npublished: false\n---\n# First One\n## Second Two\n---\n* 这是react\n```jsx\nimport(1);\nclass Aone extends React.Componet {\n    render () {\n        const b = `2`;\n        return (\n            <div>Hello word! {b}</div>\n        )\n    }\n}\nexport default Aone;\n```","slug":"test-word","updated":"2018-07-01T07:44:41.892Z","_id":"cjivgw1xo000367r4lgay4k2r","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"First-One\"><a href=\"#First-One\" class=\"headerlink\" title=\"First One\"></a>First One</h1><h2 id=\"Second-Two\"><a href=\"#Second-Two\" class=\"headerlink\" title=\"Second Two\"></a>Second Two</h2><hr>\n<ul>\n<li>这是react<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Aone</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Componet</span> </span>&#123;</span><br><span class=\"line\">    render () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b = <span class=\"string\">`2`</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;div&gt;Hello word! &#123;b&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        )</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default Aone;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"First-One\"><a href=\"#First-One\" class=\"headerlink\" title=\"First One\"></a>First One</h1><h2 id=\"Second-Two\"><a href=\"#Second-Two\" class=\"headerlink\" title=\"Second Two\"></a>Second Two</h2><hr>\n<ul>\n<li>这是react<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Aone</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Componet</span> </span>&#123;</span><br><span class=\"line\">    render () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b = <span class=\"string\">`2`</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;div&gt;Hello word! &#123;b&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        )</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default Aone;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"test_word","date":"2018-06-27T02:54:45.000Z","published":0,"_content":"# First One\n## Second Two\n---\n* \n```jsx\nimport(1);\n```","source":"_posts/test-PP.md","raw":"---\ntitle: test_word\ndate: 2018-06-27 10:54:45\ncategories: [ 测试 ]\ntags: [ 网站, Test ]\npublished: false\n---\n# First One\n## Second Two\n---\n* \n```jsx\nimport(1);\n```","slug":"test-PP","updated":"2018-07-01T07:44:36.583Z","_id":"cjiwj9kgf0003ior4r39kfnq0","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"First-One\"><a href=\"#First-One\" class=\"headerlink\" title=\"First One\"></a>First One</h1><h2 id=\"Second-Two\"><a href=\"#Second-Two\" class=\"headerlink\" title=\"Second Two\"></a>Second Two</h2><hr>\n<ul>\n<li><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span>(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"First-One\"><a href=\"#First-One\" class=\"headerlink\" title=\"First One\"></a>First One</h1><h2 id=\"Second-Two\"><a href=\"#Second-Two\" class=\"headerlink\" title=\"Second Two\"></a>Second Two</h2><hr>\n<ul>\n<li><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span>(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"为什么要写博客","date":"2018-07-01T07:38:40.000Z","_content":"# 一、前言：你的博客你做主\n\n在我刚入行时，还是个普通人，毕竟我的专业也是学这个的，每天浏览各种技术博客和论坛。可时间长了，我就发现，你不用Google真的就搜不出来你想要的东西，即使搜出来了，博客上所写的内容，零零散散，也不能满足你，你还要去搜，去找，等到各方面找全了，开始实际作战了，本地应用又会出现问题（很好理解，你本地的各种环境可能和网上不一样），为了解决问题，你还是会去搜索找博客，结果呢还是像上面一样，时间都浪费在了搜集资料和整理上，大家的项目都是公司项目，这边你还没等处理完问题，老板就来催了，加班自然跑不了。 \n其实没有所谓的好的博客，你自己写的博客，排不排版，贴不贴图，公不公开，都是随你，你开心就好。但是真的想要访问量高、评论数多，充分显示出你的专业性，还是需要下一番功夫去思考的。所以本文是一篇专业水文，建议在各种碎片化时间服用。\n\n# 二、写博客的态度\n\n你为什么想写博客？给别人看？给自己看？还有吗？你写博客时意识到自己在做什么吗？你会说码字啊。呵呵。在我看来，你写博客的过程就是在创造资源，为世界上成PB量级的数据做贡献。只不过这个资源有好有坏。如果谈到资源，就会涉及管理、使用、销毁等等。你不止是在写博客，而是在梳理你的知识技能，构建你的知识体系，在创造属于你自己的知识宝库。有那样一句玩笑话：一入IT深似海，从此妹子是路人，也侧面说明了IT行业知识、技术相当广和深，我们更需要通过博客进行知识的积累。只是你没意识到这一点，所以你才会随随便便写了两篇博客，然后就放弃了。如果你能坚持的去写一些高质量的博客，相信我，无论你何时回翻看这些博客，你都会有一种自豪感。\n\n# 三、高质量技术博客的特点\n\n来源权威，有因有果，可迭代，互动性，不啰嗦，最好是原创。","source":"_posts/blog.md","raw":"---\ntitle: 为什么要写博客\ndate: 2018-07-01 15:38:40\ntags: [ First ]\n---\n# 一、前言：你的博客你做主\n\n在我刚入行时，还是个普通人，毕竟我的专业也是学这个的，每天浏览各种技术博客和论坛。可时间长了，我就发现，你不用Google真的就搜不出来你想要的东西，即使搜出来了，博客上所写的内容，零零散散，也不能满足你，你还要去搜，去找，等到各方面找全了，开始实际作战了，本地应用又会出现问题（很好理解，你本地的各种环境可能和网上不一样），为了解决问题，你还是会去搜索找博客，结果呢还是像上面一样，时间都浪费在了搜集资料和整理上，大家的项目都是公司项目，这边你还没等处理完问题，老板就来催了，加班自然跑不了。 \n其实没有所谓的好的博客，你自己写的博客，排不排版，贴不贴图，公不公开，都是随你，你开心就好。但是真的想要访问量高、评论数多，充分显示出你的专业性，还是需要下一番功夫去思考的。所以本文是一篇专业水文，建议在各种碎片化时间服用。\n\n# 二、写博客的态度\n\n你为什么想写博客？给别人看？给自己看？还有吗？你写博客时意识到自己在做什么吗？你会说码字啊。呵呵。在我看来，你写博客的过程就是在创造资源，为世界上成PB量级的数据做贡献。只不过这个资源有好有坏。如果谈到资源，就会涉及管理、使用、销毁等等。你不止是在写博客，而是在梳理你的知识技能，构建你的知识体系，在创造属于你自己的知识宝库。有那样一句玩笑话：一入IT深似海，从此妹子是路人，也侧面说明了IT行业知识、技术相当广和深，我们更需要通过博客进行知识的积累。只是你没意识到这一点，所以你才会随随便便写了两篇博客，然后就放弃了。如果你能坚持的去写一些高质量的博客，相信我，无论你何时回翻看这些博客，你都会有一种自豪感。\n\n# 三、高质量技术博客的特点\n\n来源权威，有因有果，可迭代，互动性，不啰嗦，最好是原创。","slug":"blog","published":1,"updated":"2018-07-01T07:45:18.918Z","_id":"cjj2iwmav00005uhgkljwhwz4","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"一、前言：你的博客你做主\"><a href=\"#一、前言：你的博客你做主\" class=\"headerlink\" title=\"一、前言：你的博客你做主\"></a>一、前言：你的博客你做主</h1><p>在我刚入行时，还是个普通人，毕竟我的专业也是学这个的，每天浏览各种技术博客和论坛。可时间长了，我就发现，你不用Google真的就搜不出来你想要的东西，即使搜出来了，博客上所写的内容，零零散散，也不能满足你，你还要去搜，去找，等到各方面找全了，开始实际作战了，本地应用又会出现问题（很好理解，你本地的各种环境可能和网上不一样），为了解决问题，你还是会去搜索找博客，结果呢还是像上面一样，时间都浪费在了搜集资料和整理上，大家的项目都是公司项目，这边你还没等处理完问题，老板就来催了，加班自然跑不了。<br>其实没有所谓的好的博客，你自己写的博客，排不排版，贴不贴图，公不公开，都是随你，你开心就好。但是真的想要访问量高、评论数多，充分显示出你的专业性，还是需要下一番功夫去思考的。所以本文是一篇专业水文，建议在各种碎片化时间服用。</p>\n<h1 id=\"二、写博客的态度\"><a href=\"#二、写博客的态度\" class=\"headerlink\" title=\"二、写博客的态度\"></a>二、写博客的态度</h1><p>你为什么想写博客？给别人看？给自己看？还有吗？你写博客时意识到自己在做什么吗？你会说码字啊。呵呵。在我看来，你写博客的过程就是在创造资源，为世界上成PB量级的数据做贡献。只不过这个资源有好有坏。如果谈到资源，就会涉及管理、使用、销毁等等。你不止是在写博客，而是在梳理你的知识技能，构建你的知识体系，在创造属于你自己的知识宝库。有那样一句玩笑话：一入IT深似海，从此妹子是路人，也侧面说明了IT行业知识、技术相当广和深，我们更需要通过博客进行知识的积累。只是你没意识到这一点，所以你才会随随便便写了两篇博客，然后就放弃了。如果你能坚持的去写一些高质量的博客，相信我，无论你何时回翻看这些博客，你都会有一种自豪感。</p>\n<h1 id=\"三、高质量技术博客的特点\"><a href=\"#三、高质量技术博客的特点\" class=\"headerlink\" title=\"三、高质量技术博客的特点\"></a>三、高质量技术博客的特点</h1><p>来源权威，有因有果，可迭代，互动性，不啰嗦，最好是原创。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、前言：你的博客你做主\"><a href=\"#一、前言：你的博客你做主\" class=\"headerlink\" title=\"一、前言：你的博客你做主\"></a>一、前言：你的博客你做主</h1><p>在我刚入行时，还是个普通人，毕竟我的专业也是学这个的，每天浏览各种技术博客和论坛。可时间长了，我就发现，你不用Google真的就搜不出来你想要的东西，即使搜出来了，博客上所写的内容，零零散散，也不能满足你，你还要去搜，去找，等到各方面找全了，开始实际作战了，本地应用又会出现问题（很好理解，你本地的各种环境可能和网上不一样），为了解决问题，你还是会去搜索找博客，结果呢还是像上面一样，时间都浪费在了搜集资料和整理上，大家的项目都是公司项目，这边你还没等处理完问题，老板就来催了，加班自然跑不了。<br>其实没有所谓的好的博客，你自己写的博客，排不排版，贴不贴图，公不公开，都是随你，你开心就好。但是真的想要访问量高、评论数多，充分显示出你的专业性，还是需要下一番功夫去思考的。所以本文是一篇专业水文，建议在各种碎片化时间服用。</p>\n<h1 id=\"二、写博客的态度\"><a href=\"#二、写博客的态度\" class=\"headerlink\" title=\"二、写博客的态度\"></a>二、写博客的态度</h1><p>你为什么想写博客？给别人看？给自己看？还有吗？你写博客时意识到自己在做什么吗？你会说码字啊。呵呵。在我看来，你写博客的过程就是在创造资源，为世界上成PB量级的数据做贡献。只不过这个资源有好有坏。如果谈到资源，就会涉及管理、使用、销毁等等。你不止是在写博客，而是在梳理你的知识技能，构建你的知识体系，在创造属于你自己的知识宝库。有那样一句玩笑话：一入IT深似海，从此妹子是路人，也侧面说明了IT行业知识、技术相当广和深，我们更需要通过博客进行知识的积累。只是你没意识到这一点，所以你才会随随便便写了两篇博客，然后就放弃了。如果你能坚持的去写一些高质量的博客，相信我，无论你何时回翻看这些博客，你都会有一种自豪感。</p>\n<h1 id=\"三、高质量技术博客的特点\"><a href=\"#三、高质量技术博客的特点\" class=\"headerlink\" title=\"三、高质量技术博客的特点\"></a>三、高质量技术博客的特点</h1><p>来源权威，有因有果，可迭代，互动性，不啰嗦，最好是原创。</p>\n"},{"title":"JavaScript中的闭包","date":"2018-07-01T08:04:02.000Z","published":1,"_content":"# 作用域\n先来说下什么是作用域，简单的说，作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期。他减少了名称冲突，并且提供了自动内存管理。\n在JavaScript中，变量的作用域有全局作用域和局部作用域两种。\n\n## 全局作用域\n```js\nvar num1 = 1;\nfunction fun1 (){\n    num2 = 2;\n}\n```\n以上三个对象 `num1`, `num2` 和 `fun1` 均是全局作用域，这里要注意的是 ** 末定义直接赋值的变量自动声明为拥有全局作用域 **；\n\n## 局部作用域\n```js\nfunction wrap(){\n    var obj = \"我被wrap包裹起来了，wrap外部无法直接访问到我\";\n    function innerFun(){\n        //外部无法访问我\n    }\n}\n```\n\n## 作用域链\n当代码在一个环境中执行时，会创建变量对象的一个作用域链。\n[{当前环境的变量对象}，{外层变量对象}，{外层的外层的变量对象}, {window全局变量对象}] 每个数组单元就是作用域链的一块，这个块就是我们的变量对象。\n作用于链的前端，始终都是当前执行的代码所在环境的变量对象。全局执行环境的变量对象也始终都是链的最后一个对象。\n```js\nfunction foo(){\n    var a = 12;\n    fun(a);\n    function fun(a){\n        var b = 8;\n        console.log(a + b);\n    }\n}  \nfoo();\n```\n再来看上面这个简单的例子，我们可以先思考一下，每个执行环境下的变量对象都是什么？ 这两个函数它们的变量对象分别都是什么？\n\n我们以fun为例，当我们调用它时，会创建一个包含 `arguments`，`a`，`b`的 ** 活动对象 **，对于函数而言，在执行的最开始阶段它的活动对象里只包含一个变量，即`arguments`(当执行流进入，再创建其他的活动对象)。\n\n在活动对象中，它依然表示当前参数集合。对于函数的活动对象，我们可以想象成两部分，一个是固定的`arguments`对象，另一部分是函数中的局部变量。而在此例中，a和b都被算入是局部变量中，即便a已经包含在了`arguments中`，但他还是属于。\n\n有没有发现在环境栈中，所有的执行环境都可以组成相对应的作用域链。我们可以在环境栈中非常直观的拼接成一个相对作用域链。\n\n下面我们大致说下这段代码的执行流程：\n  1. 在创建`foo`的时候，作用域链已经预先包含了一个全局对象，并保存在内部属性`[[ Scope ]]`当中。\n  2. 执行`foo`函数，创建执行环境与活动对象后，取出函数的内部属性`[[Scope]]`构建当前环境的作用域链(取出后，只有全局变量对象，然后此时追加了一个它自己的活动对象)。\n  3. 执行过程中遇到了`fun`，从而继续对`fun`使用上一步的操作。\n  4. `fun`执行结束，移出环境栈。`foo`因此也执行完毕，继续移出。\n  5. javscript 监听到`foo`没有被任何变量所引用，开始实施垃圾回收机制，清空占用内存。\n\n作用域链其实就是引用了当前执行环境的变量对象的指针列表，它只是引用，但不是包含，因为它的形状像链条，它的执行过程也非常符合，所以我们都称之为 ** 作用域链 **，而当我们弄懂了这其中的奥秘，就可以抛开这种形式上的束缚，从原理上出发。\n\n# 闭包\n闭包，官方对闭包的解释是：一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。\n## 闭包的特点：\n  1. 作为一个函数变量的一个引用，当函数返回时，其处于激活状态。\n  2. 一个闭包就是当一个函数返回时，一个没有释放资源的栈区。\n其实就是 ** 有权访问另一个函数作用域中的变量的函数 **。简单说就是，假设函数a是定义在函数b中的函数，那么函数a就是一个闭包。正常情况下，在函数的外部访问不到函数内部的变量，但有了闭包就可以间接的实现访问内部变量的需要。也就是说，** 闭包是连接函数内部和外部的桥梁 **。\n## 闭包的作用\n  1. 访问函数内部的变量。\n  2. 让被引用的变量值始终保持在内存中。\n\n```js\nfunction fn1(){\n    var a = 1;\n    return function(){\n        console.log(++a);\n    }\n\n}\n\nvar fn2 = fn1();\n\nfn2();        //输出2\n\nfn2();        //输出3\n```\n在这段代码中，fn1中的闭包函数被当作结果返回，在闭包中的引用的变量a因为被引用而没有被清除，一直保存在内存当中，所以执行fn2的时候会输出不断增加的结果：2和3。\n\n当闭包中引用了函数中的变量时，那么，这个变量就会保存在内存中。也就是上面提到的闭包的第二个作用。之所以为这样，是因为JavaScript的回收机制。\n\n基本所有浏览器都是使用“标记清除”的方式回收内存。也就是说，当变量进入执行环境的时候（在函数中声明一个变量），就给变量添加标记，而当函数执行完的，变量不再被引用的时候，再添加删除的标记，垃圾收集器就会自动清楚这个变量占有的内存。但在闭包中引用了函数中的变量，而闭包又被当作结果返回时，闭包中的因为被引用就不会被清除\n\n## 闭包的用途\n1. 匿名自执行函数\n我们知道所有的变量，如果不加上var关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，\n比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。\n除了每次使用变量都是用var关键字外，我们在实际情况下经常遇到这样一种情况，即有的函数只需要执行一次，其内部变量无需维护，\n比如UI的初始化，那么我们可以使用闭包：\n```js\nvar data= {    \n    table : [],    \n    tree : {}    \n};    \n     \n(function(dm){    \n    for(var i = 0; i < dm.table.rows; i++){    \n        var row = dm.table.rows[i];    \n        for(var j = 0; j < row.cells; i++){    \n            drawCell(i, j);    \n        }    \n    }    \n       \n})(data);\n```\n我们创建了一个匿名的函数，并立即执行它，由于外部无法引用它内部的变量，因此在函数执行完后会立刻释放资源，关键是不污染全局对象。\n\n2. 结果缓存\n我们开发中会碰到很多情况，设想我们有一个处理过程很耗时的函数对象，每次调用都会花费很长时间，\n\n那么我们就需要将计算出来的值存储起来，当调用这个函数的时候，首先在缓存中查找，如果找不到，则进行计算，然后更新缓存并返回值，如果找到了，直接返回查找到的值即可。闭包正是可以做到这一点，因为它不会释放外部的引用，从而函数内部的值可以得以保留。\n```js\nvar CachedSearchBox = (function(){    \n    var cache = {},    \n        count = [];    \n    return {    \n        attachSearchBox : function(dsid){    \n            if(dsid in cache){//如果结果在缓存中    \n                return cache[dsid];//直接返回缓存中的对象    \n            }    \n            var fsb = new uikit.webctrl.SearchBox(dsid);//新建    \n            cache[dsid] = fsb;//更新缓存    \n            if(count.length > 100){//保正缓存的大小<=100    \n                delete cache[count.shift()];    \n            }    \n            return fsb;          \n        },    \n     \n        clearSearchBox : function(dsid){    \n            if(dsid in cache){    \n                cache[dsid].clearSelection();      \n            }    \n        }    \n    };    \n})();    \n     \nCachedSearchBox.attachSearchBox(\"input\");\n```\n这样我们在第二次调用的时候，就会从缓存中读取到该对象。\n\n3. 封装\n```js\nvar person = function(){    \n    //变量作用域为函数内部，外部无法访问    \n    var name = \"default\";       \n       \n    return {    \n        getName : function(){    \n            return name;    \n        },    \n        setName : function(newName){    \n            name = newName;    \n        }    \n    }    \n}();    \n     \nprint(person.name);//直接访问，结果为undefined    \nprint(person.getName());    \nperson.setName(\"abruzzi\");    \nprint(person.getName());    \n   \n得到结果如下：  \n   \n// undefined  \n// default  \n// abruzzi\n```\n\n4. 实现类和继承\n```js\nfunction Person(){    \n    var name = \"default\";       \n       \n    return {    \n       getName : function(){    \n           return name;    \n       },    \n       setName : function(newName){    \n           name = newName;    \n       }    \n    }    \n};   \n\nvar p = new Person();\np.setName(\"Tom\");\nalert(p.getName());\n\nvar Jack = function(){};\n//继承自Person\nJack.prototype = new Person();\n//添加私有方法\nJack.prototype.Say = function(){\n    alert(\"Hello,my name is Jack\");\n};\nvar j = new Jack();\nj.setName(\"Jack\");\nj.Say();\nalert(j.getName());\n```\n我们定义了`Person`，它就像一个类，我们`new`一个`Person`对象，访问它的方法。\n\n下面我们定义了`Jack`，继承`Person`，并添加自己的方法。","source":"_posts/js_closure.md","raw":"---\ntitle: JavaScript中的闭包\ndate: 2018-07-01 16:04:02\ntags: [ 闭包 ]\ncategories: [ JS ]\npublished: true\n---\n# 作用域\n先来说下什么是作用域，简单的说，作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期。他减少了名称冲突，并且提供了自动内存管理。\n在JavaScript中，变量的作用域有全局作用域和局部作用域两种。\n\n## 全局作用域\n```js\nvar num1 = 1;\nfunction fun1 (){\n    num2 = 2;\n}\n```\n以上三个对象 `num1`, `num2` 和 `fun1` 均是全局作用域，这里要注意的是 ** 末定义直接赋值的变量自动声明为拥有全局作用域 **；\n\n## 局部作用域\n```js\nfunction wrap(){\n    var obj = \"我被wrap包裹起来了，wrap外部无法直接访问到我\";\n    function innerFun(){\n        //外部无法访问我\n    }\n}\n```\n\n## 作用域链\n当代码在一个环境中执行时，会创建变量对象的一个作用域链。\n[{当前环境的变量对象}，{外层变量对象}，{外层的外层的变量对象}, {window全局变量对象}] 每个数组单元就是作用域链的一块，这个块就是我们的变量对象。\n作用于链的前端，始终都是当前执行的代码所在环境的变量对象。全局执行环境的变量对象也始终都是链的最后一个对象。\n```js\nfunction foo(){\n    var a = 12;\n    fun(a);\n    function fun(a){\n        var b = 8;\n        console.log(a + b);\n    }\n}  \nfoo();\n```\n再来看上面这个简单的例子，我们可以先思考一下，每个执行环境下的变量对象都是什么？ 这两个函数它们的变量对象分别都是什么？\n\n我们以fun为例，当我们调用它时，会创建一个包含 `arguments`，`a`，`b`的 ** 活动对象 **，对于函数而言，在执行的最开始阶段它的活动对象里只包含一个变量，即`arguments`(当执行流进入，再创建其他的活动对象)。\n\n在活动对象中，它依然表示当前参数集合。对于函数的活动对象，我们可以想象成两部分，一个是固定的`arguments`对象，另一部分是函数中的局部变量。而在此例中，a和b都被算入是局部变量中，即便a已经包含在了`arguments中`，但他还是属于。\n\n有没有发现在环境栈中，所有的执行环境都可以组成相对应的作用域链。我们可以在环境栈中非常直观的拼接成一个相对作用域链。\n\n下面我们大致说下这段代码的执行流程：\n  1. 在创建`foo`的时候，作用域链已经预先包含了一个全局对象，并保存在内部属性`[[ Scope ]]`当中。\n  2. 执行`foo`函数，创建执行环境与活动对象后，取出函数的内部属性`[[Scope]]`构建当前环境的作用域链(取出后，只有全局变量对象，然后此时追加了一个它自己的活动对象)。\n  3. 执行过程中遇到了`fun`，从而继续对`fun`使用上一步的操作。\n  4. `fun`执行结束，移出环境栈。`foo`因此也执行完毕，继续移出。\n  5. javscript 监听到`foo`没有被任何变量所引用，开始实施垃圾回收机制，清空占用内存。\n\n作用域链其实就是引用了当前执行环境的变量对象的指针列表，它只是引用，但不是包含，因为它的形状像链条，它的执行过程也非常符合，所以我们都称之为 ** 作用域链 **，而当我们弄懂了这其中的奥秘，就可以抛开这种形式上的束缚，从原理上出发。\n\n# 闭包\n闭包，官方对闭包的解释是：一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。\n## 闭包的特点：\n  1. 作为一个函数变量的一个引用，当函数返回时，其处于激活状态。\n  2. 一个闭包就是当一个函数返回时，一个没有释放资源的栈区。\n其实就是 ** 有权访问另一个函数作用域中的变量的函数 **。简单说就是，假设函数a是定义在函数b中的函数，那么函数a就是一个闭包。正常情况下，在函数的外部访问不到函数内部的变量，但有了闭包就可以间接的实现访问内部变量的需要。也就是说，** 闭包是连接函数内部和外部的桥梁 **。\n## 闭包的作用\n  1. 访问函数内部的变量。\n  2. 让被引用的变量值始终保持在内存中。\n\n```js\nfunction fn1(){\n    var a = 1;\n    return function(){\n        console.log(++a);\n    }\n\n}\n\nvar fn2 = fn1();\n\nfn2();        //输出2\n\nfn2();        //输出3\n```\n在这段代码中，fn1中的闭包函数被当作结果返回，在闭包中的引用的变量a因为被引用而没有被清除，一直保存在内存当中，所以执行fn2的时候会输出不断增加的结果：2和3。\n\n当闭包中引用了函数中的变量时，那么，这个变量就会保存在内存中。也就是上面提到的闭包的第二个作用。之所以为这样，是因为JavaScript的回收机制。\n\n基本所有浏览器都是使用“标记清除”的方式回收内存。也就是说，当变量进入执行环境的时候（在函数中声明一个变量），就给变量添加标记，而当函数执行完的，变量不再被引用的时候，再添加删除的标记，垃圾收集器就会自动清楚这个变量占有的内存。但在闭包中引用了函数中的变量，而闭包又被当作结果返回时，闭包中的因为被引用就不会被清除\n\n## 闭包的用途\n1. 匿名自执行函数\n我们知道所有的变量，如果不加上var关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，\n比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。\n除了每次使用变量都是用var关键字外，我们在实际情况下经常遇到这样一种情况，即有的函数只需要执行一次，其内部变量无需维护，\n比如UI的初始化，那么我们可以使用闭包：\n```js\nvar data= {    \n    table : [],    \n    tree : {}    \n};    \n     \n(function(dm){    \n    for(var i = 0; i < dm.table.rows; i++){    \n        var row = dm.table.rows[i];    \n        for(var j = 0; j < row.cells; i++){    \n            drawCell(i, j);    \n        }    \n    }    \n       \n})(data);\n```\n我们创建了一个匿名的函数，并立即执行它，由于外部无法引用它内部的变量，因此在函数执行完后会立刻释放资源，关键是不污染全局对象。\n\n2. 结果缓存\n我们开发中会碰到很多情况，设想我们有一个处理过程很耗时的函数对象，每次调用都会花费很长时间，\n\n那么我们就需要将计算出来的值存储起来，当调用这个函数的时候，首先在缓存中查找，如果找不到，则进行计算，然后更新缓存并返回值，如果找到了，直接返回查找到的值即可。闭包正是可以做到这一点，因为它不会释放外部的引用，从而函数内部的值可以得以保留。\n```js\nvar CachedSearchBox = (function(){    \n    var cache = {},    \n        count = [];    \n    return {    \n        attachSearchBox : function(dsid){    \n            if(dsid in cache){//如果结果在缓存中    \n                return cache[dsid];//直接返回缓存中的对象    \n            }    \n            var fsb = new uikit.webctrl.SearchBox(dsid);//新建    \n            cache[dsid] = fsb;//更新缓存    \n            if(count.length > 100){//保正缓存的大小<=100    \n                delete cache[count.shift()];    \n            }    \n            return fsb;          \n        },    \n     \n        clearSearchBox : function(dsid){    \n            if(dsid in cache){    \n                cache[dsid].clearSelection();      \n            }    \n        }    \n    };    \n})();    \n     \nCachedSearchBox.attachSearchBox(\"input\");\n```\n这样我们在第二次调用的时候，就会从缓存中读取到该对象。\n\n3. 封装\n```js\nvar person = function(){    \n    //变量作用域为函数内部，外部无法访问    \n    var name = \"default\";       \n       \n    return {    \n        getName : function(){    \n            return name;    \n        },    \n        setName : function(newName){    \n            name = newName;    \n        }    \n    }    \n}();    \n     \nprint(person.name);//直接访问，结果为undefined    \nprint(person.getName());    \nperson.setName(\"abruzzi\");    \nprint(person.getName());    \n   \n得到结果如下：  \n   \n// undefined  \n// default  \n// abruzzi\n```\n\n4. 实现类和继承\n```js\nfunction Person(){    \n    var name = \"default\";       \n       \n    return {    \n       getName : function(){    \n           return name;    \n       },    \n       setName : function(newName){    \n           name = newName;    \n       }    \n    }    \n};   \n\nvar p = new Person();\np.setName(\"Tom\");\nalert(p.getName());\n\nvar Jack = function(){};\n//继承自Person\nJack.prototype = new Person();\n//添加私有方法\nJack.prototype.Say = function(){\n    alert(\"Hello,my name is Jack\");\n};\nvar j = new Jack();\nj.setName(\"Jack\");\nj.Say();\nalert(j.getName());\n```\n我们定义了`Person`，它就像一个类，我们`new`一个`Person`对象，访问它的方法。\n\n下面我们定义了`Jack`，继承`Person`，并添加自己的方法。","slug":"js_closure","updated":"2018-07-01T14:06:20.990Z","_id":"cjj2jufh400035uhgiry812ns","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h1><p>先来说下什么是作用域，简单的说，作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期。他减少了名称冲突，并且提供了自动内存管理。<br>在JavaScript中，变量的作用域有全局作用域和局部作用域两种。</p>\n<h2 id=\"全局作用域\"><a href=\"#全局作用域\" class=\"headerlink\" title=\"全局作用域\"></a>全局作用域</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num1 = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun1</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    num2 = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上三个对象 <code>num1</code>, <code>num2</code> 和 <code>fun1</code> 均是全局作用域，这里要注意的是 <strong> 末定义直接赋值的变量自动声明为拥有全局作用域 </strong>；</p>\n<h2 id=\"局部作用域\"><a href=\"#局部作用域\" class=\"headerlink\" title=\"局部作用域\"></a>局部作用域</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">wrap</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"string\">\"我被wrap包裹起来了，wrap外部无法直接访问到我\"</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">innerFun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//外部无法访问我</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"作用域链\"><a href=\"#作用域链\" class=\"headerlink\" title=\"作用域链\"></a>作用域链</h2><p>当代码在一个环境中执行时，会创建变量对象的一个作用域链。<br>[{当前环境的变量对象}，{外层变量对象}，{外层的外层的变量对象}, {window全局变量对象}] 每个数组单元就是作用域链的一块，这个块就是我们的变量对象。<br>作用于链的前端，始终都是当前执行的代码所在环境的变量对象。全局执行环境的变量对象也始终都是链的最后一个对象。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">12</span>;</span><br><span class=\"line\">    fun(a);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">a</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> b = <span class=\"number\">8</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(a + b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">foo();</span><br></pre></td></tr></table></figure></p>\n<p>再来看上面这个简单的例子，我们可以先思考一下，每个执行环境下的变量对象都是什么？ 这两个函数它们的变量对象分别都是什么？</p>\n<p>我们以fun为例，当我们调用它时，会创建一个包含 <code>arguments</code>，<code>a</code>，<code>b</code>的 <strong> 活动对象 </strong>，对于函数而言，在执行的最开始阶段它的活动对象里只包含一个变量，即<code>arguments</code>(当执行流进入，再创建其他的活动对象)。</p>\n<p>在活动对象中，它依然表示当前参数集合。对于函数的活动对象，我们可以想象成两部分，一个是固定的<code>arguments</code>对象，另一部分是函数中的局部变量。而在此例中，a和b都被算入是局部变量中，即便a已经包含在了<code>arguments中</code>，但他还是属于。</p>\n<p>有没有发现在环境栈中，所有的执行环境都可以组成相对应的作用域链。我们可以在环境栈中非常直观的拼接成一个相对作用域链。</p>\n<p>下面我们大致说下这段代码的执行流程：</p>\n<ol>\n<li>在创建<code>foo</code>的时候，作用域链已经预先包含了一个全局对象，并保存在内部属性<code>[[ Scope ]]</code>当中。</li>\n<li>执行<code>foo</code>函数，创建执行环境与活动对象后，取出函数的内部属性<code>[[Scope]]</code>构建当前环境的作用域链(取出后，只有全局变量对象，然后此时追加了一个它自己的活动对象)。</li>\n<li>执行过程中遇到了<code>fun</code>，从而继续对<code>fun</code>使用上一步的操作。</li>\n<li><code>fun</code>执行结束，移出环境栈。<code>foo</code>因此也执行完毕，继续移出。</li>\n<li>javscript 监听到<code>foo</code>没有被任何变量所引用，开始实施垃圾回收机制，清空占用内存。</li>\n</ol>\n<p>作用域链其实就是引用了当前执行环境的变量对象的指针列表，它只是引用，但不是包含，因为它的形状像链条，它的执行过程也非常符合，所以我们都称之为 <strong> 作用域链 </strong>，而当我们弄懂了这其中的奥秘，就可以抛开这种形式上的束缚，从原理上出发。</p>\n<h1 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h1><p>闭包，官方对闭包的解释是：一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。</p>\n<h2 id=\"闭包的特点：\"><a href=\"#闭包的特点：\" class=\"headerlink\" title=\"闭包的特点：\"></a>闭包的特点：</h2><ol>\n<li>作为一个函数变量的一个引用，当函数返回时，其处于激活状态。</li>\n<li>一个闭包就是当一个函数返回时，一个没有释放资源的栈区。<br>其实就是 <strong> 有权访问另一个函数作用域中的变量的函数 </strong>。简单说就是，假设函数a是定义在函数b中的函数，那么函数a就是一个闭包。正常情况下，在函数的外部访问不到函数内部的变量，但有了闭包就可以间接的实现访问内部变量的需要。也就是说，<strong> 闭包是连接函数内部和外部的桥梁 </strong>。<h2 id=\"闭包的作用\"><a href=\"#闭包的作用\" class=\"headerlink\" title=\"闭包的作用\"></a>闭包的作用</h2></li>\n<li>访问函数内部的变量。</li>\n<li>让被引用的变量值始终保持在内存中。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(++a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fn2 = fn1();</span><br><span class=\"line\"></span><br><span class=\"line\">fn2();        <span class=\"comment\">//输出2</span></span><br><span class=\"line\"></span><br><span class=\"line\">fn2();        <span class=\"comment\">//输出3</span></span><br></pre></td></tr></table></figure>\n<p>在这段代码中，fn1中的闭包函数被当作结果返回，在闭包中的引用的变量a因为被引用而没有被清除，一直保存在内存当中，所以执行fn2的时候会输出不断增加的结果：2和3。</p>\n<p>当闭包中引用了函数中的变量时，那么，这个变量就会保存在内存中。也就是上面提到的闭包的第二个作用。之所以为这样，是因为JavaScript的回收机制。</p>\n<p>基本所有浏览器都是使用“标记清除”的方式回收内存。也就是说，当变量进入执行环境的时候（在函数中声明一个变量），就给变量添加标记，而当函数执行完的，变量不再被引用的时候，再添加删除的标记，垃圾收集器就会自动清楚这个变量占有的内存。但在闭包中引用了函数中的变量，而闭包又被当作结果返回时，闭包中的因为被引用就不会被清除</p>\n<h2 id=\"闭包的用途\"><a href=\"#闭包的用途\" class=\"headerlink\" title=\"闭包的用途\"></a>闭包的用途</h2><ol>\n<li>匿名自执行函数<br>我们知道所有的变量，如果不加上var关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，<br>比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。<br>除了每次使用变量都是用var关键字外，我们在实际情况下经常遇到这样一种情况，即有的函数只需要执行一次，其内部变量无需维护，<br>比如UI的初始化，那么我们可以使用闭包：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data= &#123;    </span><br><span class=\"line\">    table : [],    </span><br><span class=\"line\">    tree : &#123;&#125;    </span><br><span class=\"line\">&#125;;    </span><br><span class=\"line\">     </span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">dm</span>)</span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dm.table.rows; i++)&#123;    </span><br><span class=\"line\">        <span class=\"keyword\">var</span> row = dm.table.rows[i];    </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; row.cells; i++)&#123;    </span><br><span class=\"line\">            drawCell(i, j);    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">       </span><br><span class=\"line\">&#125;)(data);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>我们创建了一个匿名的函数，并立即执行它，由于外部无法引用它内部的变量，因此在函数执行完后会立刻释放资源，关键是不污染全局对象。</p>\n<ol start=\"2\">\n<li>结果缓存<br>我们开发中会碰到很多情况，设想我们有一个处理过程很耗时的函数对象，每次调用都会花费很长时间，</li>\n</ol>\n<p>那么我们就需要将计算出来的值存储起来，当调用这个函数的时候，首先在缓存中查找，如果找不到，则进行计算，然后更新缓存并返回值，如果找到了，直接返回查找到的值即可。闭包正是可以做到这一点，因为它不会释放外部的引用，从而函数内部的值可以得以保留。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> CachedSearchBox = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> cache = &#123;&#125;,    </span><br><span class=\"line\">        count = [];    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;    </span><br><span class=\"line\">        attachSearchBox : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">dsid</span>)</span>&#123;    </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dsid <span class=\"keyword\">in</span> cache)&#123;<span class=\"comment\">//如果结果在缓存中    </span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> cache[dsid];<span class=\"comment\">//直接返回缓存中的对象    </span></span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">            <span class=\"keyword\">var</span> fsb = <span class=\"keyword\">new</span> uikit.webctrl.SearchBox(dsid);<span class=\"comment\">//新建    </span></span><br><span class=\"line\">            cache[dsid] = fsb;<span class=\"comment\">//更新缓存    </span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(count.length &gt; <span class=\"number\">100</span>)&#123;<span class=\"comment\">//保正缓存的大小&lt;=100    </span></span><br><span class=\"line\">                <span class=\"keyword\">delete</span> cache[count.shift()];    </span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">            <span class=\"keyword\">return</span> fsb;          </span><br><span class=\"line\">        &#125;,    </span><br><span class=\"line\">     </span><br><span class=\"line\">        clearSearchBox : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">dsid</span>)</span>&#123;    </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dsid <span class=\"keyword\">in</span> cache)&#123;    </span><br><span class=\"line\">                cache[dsid].clearSelection();      </span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;;    </span><br><span class=\"line\">&#125;)();    </span><br><span class=\"line\">     </span><br><span class=\"line\">CachedSearchBox.attachSearchBox(<span class=\"string\">\"input\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p>这样我们在第二次调用的时候，就会从缓存中读取到该对象。</p>\n<ol start=\"3\">\n<li><p>封装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">    <span class=\"comment\">//变量作用域为函数内部，外部无法访问    </span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> name = <span class=\"string\">\"default\"</span>;       </span><br><span class=\"line\">       </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;    </span><br><span class=\"line\">        getName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">            <span class=\"keyword\">return</span> name;    </span><br><span class=\"line\">        &#125;,    </span><br><span class=\"line\">        setName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newName</span>)</span>&#123;    </span><br><span class=\"line\">            name = newName;    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;();    </span><br><span class=\"line\">     </span><br><span class=\"line\">print(person.name);<span class=\"comment\">//直接访问，结果为undefined    </span></span><br><span class=\"line\">print(person.getName());    </span><br><span class=\"line\">person.setName(<span class=\"string\">\"abruzzi\"</span>);    </span><br><span class=\"line\">print(person.getName());    </span><br><span class=\"line\">   </span><br><span class=\"line\">得到结果如下：  </span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"comment\">// undefined  </span></span><br><span class=\"line\"><span class=\"comment\">// default  </span></span><br><span class=\"line\"><span class=\"comment\">// abruzzi</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>实现类和继承</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> name = <span class=\"string\">\"default\"</span>;       </span><br><span class=\"line\">       </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;    </span><br><span class=\"line\">       getName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">           <span class=\"keyword\">return</span> name;    </span><br><span class=\"line\">       &#125;,    </span><br><span class=\"line\">       setName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newName</span>)</span>&#123;    </span><br><span class=\"line\">           name = newName;    </span><br><span class=\"line\">       &#125;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;;   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">p.setName(<span class=\"string\">\"Tom\"</span>);</span><br><span class=\"line\">alert(p.getName());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Jack = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">//继承自Person</span></span><br><span class=\"line\">Jack.prototype = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\"><span class=\"comment\">//添加私有方法</span></span><br><span class=\"line\">Jack.prototype.Say = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"Hello,my name is Jack\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> j = <span class=\"keyword\">new</span> Jack();</span><br><span class=\"line\">j.setName(<span class=\"string\">\"Jack\"</span>);</span><br><span class=\"line\">j.Say();</span><br><span class=\"line\">alert(j.getName());</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>我们定义了<code>Person</code>，它就像一个类，我们<code>new</code>一个<code>Person</code>对象，访问它的方法。</p>\n<p>下面我们定义了<code>Jack</code>，继承<code>Person</code>，并添加自己的方法。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h1><p>先来说下什么是作用域，简单的说，作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期。他减少了名称冲突，并且提供了自动内存管理。<br>在JavaScript中，变量的作用域有全局作用域和局部作用域两种。</p>\n<h2 id=\"全局作用域\"><a href=\"#全局作用域\" class=\"headerlink\" title=\"全局作用域\"></a>全局作用域</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num1 = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun1</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    num2 = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上三个对象 <code>num1</code>, <code>num2</code> 和 <code>fun1</code> 均是全局作用域，这里要注意的是 <strong> 末定义直接赋值的变量自动声明为拥有全局作用域 </strong>；</p>\n<h2 id=\"局部作用域\"><a href=\"#局部作用域\" class=\"headerlink\" title=\"局部作用域\"></a>局部作用域</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">wrap</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"string\">\"我被wrap包裹起来了，wrap外部无法直接访问到我\"</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">innerFun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//外部无法访问我</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"作用域链\"><a href=\"#作用域链\" class=\"headerlink\" title=\"作用域链\"></a>作用域链</h2><p>当代码在一个环境中执行时，会创建变量对象的一个作用域链。<br>[{当前环境的变量对象}，{外层变量对象}，{外层的外层的变量对象}, {window全局变量对象}] 每个数组单元就是作用域链的一块，这个块就是我们的变量对象。<br>作用于链的前端，始终都是当前执行的代码所在环境的变量对象。全局执行环境的变量对象也始终都是链的最后一个对象。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">12</span>;</span><br><span class=\"line\">    fun(a);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">a</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> b = <span class=\"number\">8</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(a + b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">foo();</span><br></pre></td></tr></table></figure></p>\n<p>再来看上面这个简单的例子，我们可以先思考一下，每个执行环境下的变量对象都是什么？ 这两个函数它们的变量对象分别都是什么？</p>\n<p>我们以fun为例，当我们调用它时，会创建一个包含 <code>arguments</code>，<code>a</code>，<code>b</code>的 <strong> 活动对象 </strong>，对于函数而言，在执行的最开始阶段它的活动对象里只包含一个变量，即<code>arguments</code>(当执行流进入，再创建其他的活动对象)。</p>\n<p>在活动对象中，它依然表示当前参数集合。对于函数的活动对象，我们可以想象成两部分，一个是固定的<code>arguments</code>对象，另一部分是函数中的局部变量。而在此例中，a和b都被算入是局部变量中，即便a已经包含在了<code>arguments中</code>，但他还是属于。</p>\n<p>有没有发现在环境栈中，所有的执行环境都可以组成相对应的作用域链。我们可以在环境栈中非常直观的拼接成一个相对作用域链。</p>\n<p>下面我们大致说下这段代码的执行流程：</p>\n<ol>\n<li>在创建<code>foo</code>的时候，作用域链已经预先包含了一个全局对象，并保存在内部属性<code>[[ Scope ]]</code>当中。</li>\n<li>执行<code>foo</code>函数，创建执行环境与活动对象后，取出函数的内部属性<code>[[Scope]]</code>构建当前环境的作用域链(取出后，只有全局变量对象，然后此时追加了一个它自己的活动对象)。</li>\n<li>执行过程中遇到了<code>fun</code>，从而继续对<code>fun</code>使用上一步的操作。</li>\n<li><code>fun</code>执行结束，移出环境栈。<code>foo</code>因此也执行完毕，继续移出。</li>\n<li>javscript 监听到<code>foo</code>没有被任何变量所引用，开始实施垃圾回收机制，清空占用内存。</li>\n</ol>\n<p>作用域链其实就是引用了当前执行环境的变量对象的指针列表，它只是引用，但不是包含，因为它的形状像链条，它的执行过程也非常符合，所以我们都称之为 <strong> 作用域链 </strong>，而当我们弄懂了这其中的奥秘，就可以抛开这种形式上的束缚，从原理上出发。</p>\n<h1 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h1><p>闭包，官方对闭包的解释是：一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。</p>\n<h2 id=\"闭包的特点：\"><a href=\"#闭包的特点：\" class=\"headerlink\" title=\"闭包的特点：\"></a>闭包的特点：</h2><ol>\n<li>作为一个函数变量的一个引用，当函数返回时，其处于激活状态。</li>\n<li>一个闭包就是当一个函数返回时，一个没有释放资源的栈区。<br>其实就是 <strong> 有权访问另一个函数作用域中的变量的函数 </strong>。简单说就是，假设函数a是定义在函数b中的函数，那么函数a就是一个闭包。正常情况下，在函数的外部访问不到函数内部的变量，但有了闭包就可以间接的实现访问内部变量的需要。也就是说，<strong> 闭包是连接函数内部和外部的桥梁 </strong>。<h2 id=\"闭包的作用\"><a href=\"#闭包的作用\" class=\"headerlink\" title=\"闭包的作用\"></a>闭包的作用</h2></li>\n<li>访问函数内部的变量。</li>\n<li>让被引用的变量值始终保持在内存中。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(++a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fn2 = fn1();</span><br><span class=\"line\"></span><br><span class=\"line\">fn2();        <span class=\"comment\">//输出2</span></span><br><span class=\"line\"></span><br><span class=\"line\">fn2();        <span class=\"comment\">//输出3</span></span><br></pre></td></tr></table></figure>\n<p>在这段代码中，fn1中的闭包函数被当作结果返回，在闭包中的引用的变量a因为被引用而没有被清除，一直保存在内存当中，所以执行fn2的时候会输出不断增加的结果：2和3。</p>\n<p>当闭包中引用了函数中的变量时，那么，这个变量就会保存在内存中。也就是上面提到的闭包的第二个作用。之所以为这样，是因为JavaScript的回收机制。</p>\n<p>基本所有浏览器都是使用“标记清除”的方式回收内存。也就是说，当变量进入执行环境的时候（在函数中声明一个变量），就给变量添加标记，而当函数执行完的，变量不再被引用的时候，再添加删除的标记，垃圾收集器就会自动清楚这个变量占有的内存。但在闭包中引用了函数中的变量，而闭包又被当作结果返回时，闭包中的因为被引用就不会被清除</p>\n<h2 id=\"闭包的用途\"><a href=\"#闭包的用途\" class=\"headerlink\" title=\"闭包的用途\"></a>闭包的用途</h2><ol>\n<li>匿名自执行函数<br>我们知道所有的变量，如果不加上var关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，<br>比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。<br>除了每次使用变量都是用var关键字外，我们在实际情况下经常遇到这样一种情况，即有的函数只需要执行一次，其内部变量无需维护，<br>比如UI的初始化，那么我们可以使用闭包：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data= &#123;    </span><br><span class=\"line\">    table : [],    </span><br><span class=\"line\">    tree : &#123;&#125;    </span><br><span class=\"line\">&#125;;    </span><br><span class=\"line\">     </span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">dm</span>)</span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dm.table.rows; i++)&#123;    </span><br><span class=\"line\">        <span class=\"keyword\">var</span> row = dm.table.rows[i];    </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; row.cells; i++)&#123;    </span><br><span class=\"line\">            drawCell(i, j);    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">       </span><br><span class=\"line\">&#125;)(data);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>我们创建了一个匿名的函数，并立即执行它，由于外部无法引用它内部的变量，因此在函数执行完后会立刻释放资源，关键是不污染全局对象。</p>\n<ol start=\"2\">\n<li>结果缓存<br>我们开发中会碰到很多情况，设想我们有一个处理过程很耗时的函数对象，每次调用都会花费很长时间，</li>\n</ol>\n<p>那么我们就需要将计算出来的值存储起来，当调用这个函数的时候，首先在缓存中查找，如果找不到，则进行计算，然后更新缓存并返回值，如果找到了，直接返回查找到的值即可。闭包正是可以做到这一点，因为它不会释放外部的引用，从而函数内部的值可以得以保留。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> CachedSearchBox = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> cache = &#123;&#125;,    </span><br><span class=\"line\">        count = [];    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;    </span><br><span class=\"line\">        attachSearchBox : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">dsid</span>)</span>&#123;    </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dsid <span class=\"keyword\">in</span> cache)&#123;<span class=\"comment\">//如果结果在缓存中    </span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> cache[dsid];<span class=\"comment\">//直接返回缓存中的对象    </span></span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">            <span class=\"keyword\">var</span> fsb = <span class=\"keyword\">new</span> uikit.webctrl.SearchBox(dsid);<span class=\"comment\">//新建    </span></span><br><span class=\"line\">            cache[dsid] = fsb;<span class=\"comment\">//更新缓存    </span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(count.length &gt; <span class=\"number\">100</span>)&#123;<span class=\"comment\">//保正缓存的大小&lt;=100    </span></span><br><span class=\"line\">                <span class=\"keyword\">delete</span> cache[count.shift()];    </span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">            <span class=\"keyword\">return</span> fsb;          </span><br><span class=\"line\">        &#125;,    </span><br><span class=\"line\">     </span><br><span class=\"line\">        clearSearchBox : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">dsid</span>)</span>&#123;    </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dsid <span class=\"keyword\">in</span> cache)&#123;    </span><br><span class=\"line\">                cache[dsid].clearSelection();      </span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;;    </span><br><span class=\"line\">&#125;)();    </span><br><span class=\"line\">     </span><br><span class=\"line\">CachedSearchBox.attachSearchBox(<span class=\"string\">\"input\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p>这样我们在第二次调用的时候，就会从缓存中读取到该对象。</p>\n<ol start=\"3\">\n<li><p>封装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">    <span class=\"comment\">//变量作用域为函数内部，外部无法访问    </span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> name = <span class=\"string\">\"default\"</span>;       </span><br><span class=\"line\">       </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;    </span><br><span class=\"line\">        getName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">            <span class=\"keyword\">return</span> name;    </span><br><span class=\"line\">        &#125;,    </span><br><span class=\"line\">        setName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newName</span>)</span>&#123;    </span><br><span class=\"line\">            name = newName;    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;();    </span><br><span class=\"line\">     </span><br><span class=\"line\">print(person.name);<span class=\"comment\">//直接访问，结果为undefined    </span></span><br><span class=\"line\">print(person.getName());    </span><br><span class=\"line\">person.setName(<span class=\"string\">\"abruzzi\"</span>);    </span><br><span class=\"line\">print(person.getName());    </span><br><span class=\"line\">   </span><br><span class=\"line\">得到结果如下：  </span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"comment\">// undefined  </span></span><br><span class=\"line\"><span class=\"comment\">// default  </span></span><br><span class=\"line\"><span class=\"comment\">// abruzzi</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>实现类和继承</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> name = <span class=\"string\">\"default\"</span>;       </span><br><span class=\"line\">       </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;    </span><br><span class=\"line\">       getName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    </span><br><span class=\"line\">           <span class=\"keyword\">return</span> name;    </span><br><span class=\"line\">       &#125;,    </span><br><span class=\"line\">       setName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newName</span>)</span>&#123;    </span><br><span class=\"line\">           name = newName;    </span><br><span class=\"line\">       &#125;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;;   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">p.setName(<span class=\"string\">\"Tom\"</span>);</span><br><span class=\"line\">alert(p.getName());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Jack = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">//继承自Person</span></span><br><span class=\"line\">Jack.prototype = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\"><span class=\"comment\">//添加私有方法</span></span><br><span class=\"line\">Jack.prototype.Say = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"Hello,my name is Jack\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> j = <span class=\"keyword\">new</span> Jack();</span><br><span class=\"line\">j.setName(<span class=\"string\">\"Jack\"</span>);</span><br><span class=\"line\">j.Say();</span><br><span class=\"line\">alert(j.getName());</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>我们定义了<code>Person</code>，它就像一个类，我们<code>new</code>一个<code>Person</code>对象，访问它的方法。</p>\n<p>下面我们定义了<code>Jack</code>，继承<code>Person</code>，并添加自己的方法。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjiwj9kgf0003ior4r39kfnq0","category_id":"cjiwk65kq0000uur4fd3ipphb","_id":"cjiwk65kr0001uur4mies7984"},{"post_id":"cjivgw1xo000367r4lgay4k2r","category_id":"cjiwk6gg40002uur4hkz7nvh6","_id":"cjiwk6gg40003uur43jycuo9q"},{"post_id":"cjj2jufh400035uhgiry812ns","category_id":"cjj2jvthg00045uhgp27wbc62","_id":"cjj2jvthh00075uhgd73r3o3t"}],"PostTag":[{"post_id":"cjivgw1xh000067r4av45d7bl","tag_id":"cjivgw1xm000267r4vntxe4ny","_id":"cjivgw1xp000567r4kv6i7cwm"},{"post_id":"cjivgw1xk000167r4epcrgu1g","tag_id":"cjivgw1xp000467r41dfppiaq","_id":"cjivgw1xq000767r4sewq9bd0"},{"post_id":"cjivgw1xo000367r4lgay4k2r","tag_id":"cjivgw1xq000667r4yft07qdq","_id":"cjivgw1xq000967r4dsy3vr5q"},{"post_id":"cjivgw1xo000367r4lgay4k2r","tag_id":"cjivgw1xq000867r4ygd4rm8j","_id":"cjivgw1xr000a67r4cz9p4rsp"},{"post_id":"cjiwj9kgf0003ior4r39kfnq0","tag_id":"cjivgw1xq000667r4yft07qdq","_id":"cjiwj9kgh0004ior40yslutnm"},{"post_id":"cjiwj9kgf0003ior4r39kfnq0","tag_id":"cjiwjbbv50006ior4jwvt3m2c","_id":"cjiwjbbv60007ior447vs6ujo"},{"post_id":"cjj2iwmav00005uhgkljwhwz4","tag_id":"cjj2j4exb00015uhg41rpbb45","_id":"cjj2j4exc00025uhgzus32sjo"},{"post_id":"cjj2jufh400035uhgiry812ns","tag_id":"cjj2jvthg00055uhgnohhfpj1","_id":"cjj2jvthh00065uhgkw9x52at"}],"Tag":[{"name":"hello","_id":"cjivgw1xm000267r4vntxe4ny"},{"name":"test","_id":"cjivgw1xp000467r41dfppiaq"},{"name":"网站","_id":"cjivgw1xq000667r4yft07qdq"},{"name":"前端","_id":"cjivgw1xq000867r4ygd4rm8j"},{"name":"Test","_id":"cjiwjbbv50006ior4jwvt3m2c"},{"name":"First","_id":"cjj2j4exb00015uhg41rpbb45"},{"name":"闭包","_id":"cjj2jvthg00055uhgnohhfpj1"}]}}